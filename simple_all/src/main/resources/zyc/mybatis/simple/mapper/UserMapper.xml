<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zyc.mybatis.simple.mapper.UserMapper">


        <resultMap id="userMap" type="zyc.mybatis.simple.model.SysUser" >
                <id property="id" column="id"/>
                <result property="userName" column="user_name"/>
                <result property="userPassword" column="user_password"/>
                <result property="userEmail" column="user_email"/>
                <result property="userInfo" column="user_info"/>
                <result property="headImg" column="head_img" jdbcType="BLOB"/>
                <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        </resultMap>

        <select id="selectById" resultMap="userMap">
                select * from sys_user where id = #{id}
        </select>



        <select id="selectAll" resultType="zyc.mybatis.simple.model.SysUser">
                select id,
                       user_name userName,
                       user_password userPassword,
                       user_email userEmail,
                       user_info userInfo,
                       head_img headImg,
                       create_time createTime
                from sys_user
        </select>


    <select id="selectRolesByUserId" resultType="zyc.mybatis.simple.model.SysRole">
        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime,
            u.user_name as "user.userName",
            u.user_email as "user.userEmail"
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>



    <!--  *注意这里可以指定jdbc的类型  -->
    <insert id="insert">
        insert into sys_user(
            user_name, user_password, user_email,
            user_info, head_img, create_time)
        values(
                  #{userName}, #{userPassword}, #{userEmail},
                  #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(
            user_name, user_password, user_email,
            user_info, head_img, create_time)
        values(
                  #{userName}, #{userPassword}, #{userEmail},
                  #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
    </insert>


    <insert id="insert3">
        insert into sys_user(
        user_name, user_password, user_email,
        user_info, head_img, create_time)
        values(
        #{userName}, #{userPassword}, #{userEmail},
        #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- Oracle 的例子，查询多个列的时候需要 keyColumn -->
    <insert id="insertOracle">
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="BEFORE">
            SELECT SEQ_USER.nextval from dual
        </selectKey>
        insert into sys_user(
        id, user_name, user_password, user_email,
        user_info, head_img, create_time)
        values(
        #{id}, #{userName}, #{userPassword}, #{userEmail},
        #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
    </insert>

    <update id="updateById">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg, jdbcType=BLOB},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from sys_user where id = #{id}
    </delete>

    <select id="selectRolesByUserIdAndRoleEnabled" resultType="zyc.mybatis.simple.model.SysRole">
        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId} and r.enabled = #{enabled}
    </select>



</mapper>